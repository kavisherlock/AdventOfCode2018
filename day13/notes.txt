For part 1, I basically took it one step at a time, almost like TDD, making one logical part work before moving on to the next complication.
First, I made the carts move per tick. It involved a lot of if loops to check the current directions. Then, I made the carts turn based on where they are and what the next squiare is; more if statements. Then, with even more if statements, I handled the intersections. For these, I had to switch things up and change what the carts look like on the grid (changing them to alphabets) so I can separately keep track of its direction and last interesection turn. But after the if statements, I was able to find the collission pretty easily
Part 2 was more interesting. Theoretically, I just had to keep making them collide until there's one cart left. However, this actually revealed a small bug in the code. Because of past problems like this, I was basically creaating the new cart configuration completely based on the previous one not realising that within each tick, the carts are moving in real-time. After fixing that and making sure I don't move the same cart twice if I encounter it again in the same tick, I was able to solve this problem as well